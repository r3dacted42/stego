(function(){"use strict";self.onmessage=w=>{try{console.log("Worker received bitmap and message for encoding");const{bitmap:t,message:o}=w.data,r=new OffscreenCanvas(t.width,t.height),l=r.getContext("2d");if(!l){self.postMessage({error:"Failed to get OffscreenCanvas context"});return}l.drawImage(t,0,0),t.close();const c=l.getImageData(0,0,r.width,r.height),s=c.data,i=new TextEncoder().encode(o),f=i.length,n=new Uint8Array(4);new DataView(n.buffer).setUint32(0,f,!1);const a=new Uint8Array(n.length+i.length);a.set(n,0),a.set(i,n.length);const m=a.length*8,h=Math.floor(s.length/4)*3;if(m>h){self.postMessage({error:`Message is too large (${f} bytes) for this image (max ${Math.floor(h/8)-4} bytes).`});return}let e=0;for(let g=0;g<a.length;g++){const x=a[g];for(let d=7;d>=0;d--){for(;e%4===3;)e++;if(e>=s.length)throw new Error("unexpected EOF");const p=x>>d&1,E=s[e];p===1?s[e]=E|1:s[e]=E&254,e++}}const y={imageData:c};self.postMessage(y,[c.data.buffer])}catch(t){const o=t;self.postMessage({error:o.message})}}})();
