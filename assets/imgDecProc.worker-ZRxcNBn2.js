(function(){"use strict";self.onmessage=f=>{try{console.log("Worker received bitmap for decoding");const{bitmap:s}=f.data,a=new OffscreenCanvas(s.width,s.height),c=a.getContext("2d");if(!c){self.postMessage({error:"Failed to get OffscreenCanvas context"});return}c.drawImage(s,0,0),s.close();const n=c.getImageData(0,0,a.width,a.height).data;if(n.length<32){self.postMessage({error:"Image is too small to contain a message header."});return}const l=new Uint8Array(4);let i=0;for(let e=0;e<4;e++){let t=0;for(let r=0;r<8;r++){const g=n[i]&1;t=t<<1|g,i++}l[e]=t}const o=new DataView(l.buffer).getUint32(0,!1),E=n.length-32,m=o*8;if(o===0){self.postMessage({message:""});return}if(m>E){self.postMessage({error:`Corrupted data: Message length header is ${o} bytes, but only ${Math.floor(E/8)} bytes are available.`});return}const d=new Uint8Array(o);for(let e=0;e<o;e++){let t=0;for(let r=0;r<8;r++){const g=n[i]&1;t=t<<1|g,i++}d[e]=t}const h={message:new TextDecoder().decode(d)};self.postMessage(h)}catch(s){const a=s;self.postMessage({error:a.message})}}})();
